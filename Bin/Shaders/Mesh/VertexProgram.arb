!!ARBvp1.0
# cgc version 2.0.0012, build date Jan 30 2008
# command line args: -oglsl -profile arbvp1
# source file: VertexProgram.vp
#vendor NVIDIA Corporation
#version 2.0.0.12
#profile arbvp1
#program main
#semantic pBoneMatrices
#semantic gl_ModelViewProjectionMatrix : state.matrix.mvp.transpose
#var float2 vTex0 : $vin.ATTR1 : ATTR1 : -1 : 1
#var float4 vSkin : $vin.ATTR2 : ATTR2 : -1 : 1
#var float2 texCoord : $vout.TEX0 : TEX0 : -1 : 1
#var float4x4 pBoneMatrices[0] :  : c[1], 4 : -1 : 1
#var float4x4 pBoneMatrices[1] :  : c[5], 4 : -1 : 1
#var float4x4 pBoneMatrices[2] :  : c[9], 4 : -1 : 1
#var float4x4 pBoneMatrices[3] :  : c[13], 4 : -1 : 1
#var float4x4 pBoneMatrices[4] :  : c[17], 4 : -1 : 1
#var float4x4 pBoneMatrices[5] :  : c[21], 4 : -1 : 1
#var float4x4 pBoneMatrices[6] :  : c[25], 4 : -1 : 1
#var float4x4 pBoneMatrices[7] :  : c[29], 4 : -1 : 1
#var float4x4 pBoneMatrices[8] :  : c[33], 4 : -1 : 1
#var float4x4 pBoneMatrices[9] :  : c[37], 4 : -1 : 1
#var float4x4 pBoneMatrices[10] :  : c[41], 4 : -1 : 1
#var float4x4 pBoneMatrices[11] :  : c[45], 4 : -1 : 1
#var float4x4 pBoneMatrices[12] :  : c[49], 4 : -1 : 1
#var float4x4 pBoneMatrices[13] :  : c[53], 4 : -1 : 1
#var float4x4 pBoneMatrices[14] :  : c[57], 4 : -1 : 1
#var float4x4 pBoneMatrices[15] :  : c[61], 4 : -1 : 1
#var float4x4 pBoneMatrices[16] :  : c[65], 4 : -1 : 1
#var float4x4 pBoneMatrices[17] :  : c[69], 4 : -1 : 1
#var float4x4 pBoneMatrices[18] :  : c[73], 4 : -1 : 1
#var float4x4 pBoneMatrices[19] :  : c[77], 4 : -1 : 1
#var float4 gl_Position : $vout.POSITION : HPOS : -1 : 1
#var float4x4 gl_ModelViewProjectionMatrix : state.matrix.mvp.transpose : c[81], 4 : -1 : 1
#var float4 gl_Vertex : $vin.POSITION : POSITION : -1 : 1
#var float4 gl_FrontColor : $vout.COLOR0 : COL0 : -1 : 1
#const c[0] = 4 1
PARAM c[85] = { { 4, 1 },
		program.local[1..80],
		state.matrix.mvp.transpose };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
ADDRESS A0;
FLR R0.x, vertex.attrib[2].z;
MUL R3.y, R0.x, c[0].x;
ARL A0.x, R3.y;
MUL R1, vertex.attrib[2].w, c[A0.x + 2];
FLR R2.x, vertex.attrib[2];
MUL R0, vertex.attrib[2].w, c[A0.x + 1];
MUL R1, vertex.position.y, R1;
MAD R1, vertex.position.x, R0, R1;
MUL R0, vertex.attrib[2].w, c[A0.x + 3];
MUL R3.x, R2, c[0];
MAD R2, vertex.position.z, R0, R1;
ARL A0.x, R3.x;
MUL R0, vertex.attrib[2].y, c[A0.x + 2];
ARL A0.x, R3.y;
MUL R1, vertex.attrib[2].w, c[A0.x + 4];
MAD R2, vertex.position.w, R1, R2;
ARL A0.x, R3.x;
MUL R1, vertex.position.y, R0;
MUL R0, vertex.attrib[2].y, c[A0.x + 1];
MAD R1, vertex.position.x, R0, R1;
MUL R0, vertex.attrib[2].y, c[A0.x + 3];
MAD R1, vertex.position.z, R0, R1;
MUL R0, vertex.attrib[2].y, c[A0.x + 4];
MAD R0, vertex.position.w, R0, R1;
ADD R0, R0, R2;
MUL R1, R0.y, c[82];
MAD R1, R0.x, c[81], R1;
MAD R1, R0.z, c[83], R1;
MAD result.position, R0.w, c[84], R1;
MOV result.color, c[0].y;
MOV result.texcoord[0].xy, vertex.attrib[1];
END
# 31 instructions, 4 R-regs
